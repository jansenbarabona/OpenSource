@using VehicleRegistration.Models
@model WalletReportModel

@{
    ViewBag.Title = "Wallet Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h6><i class="nav-icon fas fa-file-signature"></i> Pending Dealers List  <small> </small></h6>
                </div>

                @using (Html.BeginForm("WalletReport", "Reports", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="card-body">
                        <div class="check btn-info" id="btn_report" type="button" name="btnSubmit" data-toggle="tooltip" title="Download Report" 
                             @*data-toggle="modal" data-target=".bd-example-modal-xl"*@><i class="fas fa-car"></i></div>

                        <div class="row">
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(m => m.SelectedEntityID)
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> <i class="fas fa-truck-pickup"></i> </span>
                                    </div>
                                    @Html.DropDownListFor(m => m.SelectedEntityID,
               new SelectList(Model.EntityList, "EntityID", "EntityName"), "Select Entity", new { @class = "form-control select2" })
                                </div>
                                @Html.ValidationMessageFor(m => m.SelectedEntityID, "", new { @class = "" })
                            </div> <!-- Entity form-group// -->
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(m => m.SelectedCompanyID)
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> <i class="fas fa-truck-pickup"></i> </span>
                                    </div>
                                    @Html.DropDownListFor(m => m.SelectedCompanyID,
               new SelectList(Model.CompanyList, "CompanyID", "CompanyName"), "Select Company", new { @class = "form-control select2" })
                                </div>
                                @Html.ValidationMessageFor(m => m.SelectedCompanyID, "", new { @class = "" })
                            </div> <!-- Company form-group// -->
                            <!--<div class="form-group col-lg-4">
                                @Html.LabelFor(m => m.SelectedBranchID)
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> <i class="fas fa-truck-pickup"></i> </span>
                                    </div>
                                    @Html.DropDownListFor(m => m.SelectedBranchID,
               new SelectList(Model.BranchList, "BranchID", "BranchName"), "Select Branch", new { @class = "form-control select2" })
                                </div>
                                @Html.ValidationMessageFor(m => m.SelectedBranchID, "", new { @class = "" })
                            </div>--> <!-- Branch form-group// -->
                        </div>
                        <div class="row">
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(m => m.SelectedTransactionID)
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> <i class="fas fa-truck-pickup"></i> </span>
                                    </div>
                                    @Html.DropDownListFor(m => m.SelectedTransactionID,
               new SelectList(Model.TransactionTypeList, "TransactionTypeID", "TransactionTypeName"), "Select Transaction", new { @class = "form-control select2" })
                                </div>
                                @Html.ValidationMessageFor(m => m.SelectedTransactionID, "", new { @class = "" })
                            </div> <!-- Transaction form-group// -->
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(m => m.PeriodFrom)
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> <i class="fas fa-car"></i> </span>
                                    </div>
                                    @Html.EditorFor(m => m.PeriodFrom, new { htmlAttributes = new { @class = "form-control", placeholder = "Period From", @type = "date" } })
                                </div>
                                @Html.ValidationMessageFor(m => m.PeriodFrom, "", new { @class = "" })
                            </div> <!-- Vehicle Model form-group// -->
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(m => m.PeriodTo)
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> <i class="fas fa-car"></i> </span>
                                    </div>
                                    @Html.EditorFor(m => m.PeriodTo, new { htmlAttributes = new { @class = "form-control", placeholder = "Period To", @type = "date" } })
                                </div>
                                @Html.ValidationMessageFor(m => m.PeriodTo, "", new { @class = "" })
                            </div> <!-- Vehicle Body form-group// -->
                        </div>
                    </div>
                    <!-- /.card-body -->
                }
            </div>
            <!-- /.card -->
            <iframe id="report_viewer" frameborder="0"
                    scrolling="no" seamless="seamless" marginheight="0" marginwidth="0" role="document" style="width: 100%; margin: 0%; height: 720px;" aria-label="PDF document" title="PDF document"></iframe>
            </div>
        </div>
        <!-- /.col -->

</section>


<script>

    $(document).ready(function () {
        @if (ViewBag.Path != null)
        {
            <text>$('#report_viewer').attr('src', '@Url.Content("~/Reports/VRTempFiles/"+ ViewBag.Path)');</text>

        }
    });

    $("#btn_report").on("click", function () {
        if (jQuery("form").valid()) {
            $("form").submit();
        }
    });

    $('#SelectedEntityID').on('change', function () {
        $.ajax({
            url: '@Url.Action("GetCompany", "Reports")',
            type: "GET",
            dataType: "JSON",
            cache: false,
            data: { "EntityID": this.value },
            success: function (response) {
                $("#SelectedCompanyID").find("option:gt(0)").remove();
                $.each(response, function (index, value) {
                    var o = new Option(value.CompanyName, value.CompanyID);
                    $("#SelectedCompanyID").append($(o));
                });
            },
            error: function (xhr, status, error) {
                alert(xhr.responseText);
            }
        });
    });
    $('#SelectedCompanyID').on('change', function () {
        var entityid = $('#SelectedEntityID').val();
        $.ajax({
            url: '@Url.Action("GetBranch", "Reports")',
            type: "GET",
            dataType: "JSON",
            cache: false,
            data: { "EntityID": entityid, "CompanyID": this.value },
            success: function (response) {
                $("#SelectedBranchID").find("option:gt(0)").remove();
                $.each(response, function (index, value) {
                    var o = new Option(value.BranchName, value.BranchID);
                    $("#SelectedBranchID").append($(o));
                });
            },
            error: function (xhr, status, error) {
                alert(xhr.responseText);
            }
        });
    });
</script>