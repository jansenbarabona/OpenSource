@using VehicleRegistration.Models
@model InsuranceModel
@{
    ViewBag.Title = "Insurance_Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- Main content -->
<section class="content">
    <div class="card">
        <div class="card-header">
            <div class="card-tools">
                <button type="button" class="btn btn-tool" data-toggle="tooltip" title="Back" onclick="location.href='@Url.Action("Index", "Insurance")'">
                    <i class="far fa-times-circle"></i>
                    @*<i class="far fa-times-circle"></i>*@
                </button>
            </div>
            <h6><i class="nav-icon fas fa-hand-holding-heart"></i> Insurance Registration Form   <small></small></h6>
        </div>
        <!-- /.card-header -->

        <article class="card-body mx-auto">
            @using (Html.BeginForm("Insurance_Register", "Insurance", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(m => m.InsuranceName)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"> <i class="fa fa-user"></i> </span>
                            </div>
                            @Html.HiddenFor(m => m.InsuranceID,
                           new
                           {
                               @class = "form-control"
                           })
                            @Html.TextBoxFor(m => m.InsuranceName,
                           new
                           {
                               placeholder = "Full name",
                               @class = "form-control"
                           })
                        </div>
                        @Html.ValidationMessageFor(m => m.InsuranceName, "", new { @class = "" })
                    </div>
                    <!-- form-group// -->
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(m => m.EmailAddress)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"> <i class="fa fa-envelope"></i> </span>
                            </div>
                            @Html.TextBoxFor(m => m.EmailAddress, new { placeholder = "Email address", @class = "form-control validate", type = "email" })
                        </div>
                        @Html.ValidationMessageFor(m => m.EmailAddress, "", new { @class = "" })
                    </div> <!-- form-group// -->
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(m => m.EmailAddress2)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"> <i class="fa fa-envelope"></i> </span>
                            </div>
                            @Html.TextBoxFor(m => m.EmailAddress2, new { placeholder = "Secondary Email", @class = "form-control validate", type = "email" })
                        </div>
                        @Html.ValidationMessageFor(m => m.EmailAddress2, "", new { @class = "" })
                    </div> <!-- form-group// -->
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(m => m.BusinessPhone)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"> <i class="fa fa-phone"></i> </span>
                            </div>
                            @Html.TextBoxFor(m => m.BusinessPhone,
                           new
                           {
                               placeholder = "Business phone",
                               @class = "form-control"
                           })
                        </div>
                        @Html.ValidationMessageFor(m => m.BusinessPhone, "", new { @class = "" })
                    </div> <!-- form-group// -->
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(m => m.MobilePhone)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"> <i class="fa fa-mobile-alt"></i> </span>
                            </div>
                            @Html.TextBoxFor(m => m.MobilePhone,
                           new
                           {
                               placeholder = "Mobile phone",
                               @class = "form-control"
                           })
                        </div>
                        @Html.ValidationMessageFor(m => m.MobilePhone, "", new { @class = "" })
                    </div> <!-- form-group// -->
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(m => m.FaxNumber)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"> <i class="fa fa-fax"></i> </span>
                            </div>
                            @Html.TextBoxFor(m => m.FaxNumber,
                           new
                           {
                               placeholder = "Fax number",
                               @class = "form-control"
                           })
                        </div>
                        @Html.ValidationMessageFor(m => m.FaxNumber, "", new { @class = "" })
                    </div> <!-- form-group// -->
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(m => m.TIN)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"> <i class="fa fa-fax"></i> </span>
                            </div>
                            @Html.TextBoxFor(m => m.TIN,
                           new
                           {
                               placeholder = "TIN",
                               @class = "form-control"
                           })
                        </div>
                        @Html.ValidationMessageFor(m => m.TIN, "", new { @class = "" })
                    </div> <!-- form-group// -->
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(m => m.Website)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"> <i class="fa fa-envelope"></i> </span>
                            </div>
                            @Html.TextBoxFor(m => m.Website,
                           new
                           {
                               placeholder = "Website",
                               @class = "form-control"
                           })
                        </div>
                        @Html.ValidationMessageFor(m => m.Website, "", new { @class = "" })
                    </div> <!-- form-group// -->
                    <div class="form-group col-12">
                        @Html.LabelFor(m => m.Address)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"> <i class="fa fa-map-marked-alt"></i> </span>
                            </div>
                            @Html.TextBoxFor(m => m.Address,
                           new
                           {
                               placeholder = "Address",
                               @class = "form-control"
                           })
                        </div>
                        @Html.ValidationMessageFor(m => m.Address, "", new { @class = "" })
                    </div> <!-- form-group// -->
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(m => m.ProvinceID)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"> <i class="fa fa-building"></i> </span>
                            </div>
                            @Html.DropDownListFor(m => m.ProvinceID,
                           new SelectList(Model.ProvinceList, "ProvinceID", "ProvinceName"), "Select Province", new { @class = "form-control select2", @required = "required" })
                        </div>
                        @Html.ValidationMessageFor(m => m.ProvinceID, "", new { @class = "" })
                    </div> <!-- Province form-group// -->
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(m => m.CityID)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"> <i class="fa fa-building"></i> </span>
                            </div>
                            @Html.DropDownListFor(m => m.CityID,
                           new SelectList(Model.CityList, "CityID", "CityName"), "Select city", new { @class = "form-control select2", @required = "required" })
                        </div>
                        @Html.ValidationMessageFor(m => m.CityID, "", new { @class = "" })
                    </div> <!-- form-group end.// -->
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(m => m.BarangayID)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"> <i class="fa fa-home"></i> </span>
                            </div>
                            @Html.DropDownListFor(m => m.BarangayID,
                           new SelectList(Model.BarangayList, "BarangayID", "BarangayName"), "Select Barangay", new { @class = "form-control select2", @required = "required" })
                        </div>
                        @Html.ValidationMessageFor(m => m.BarangayID, "", new { @class = "" })
                    </div> <!-- form-group end.// -->
                    <div class="form-group  col-lg-4">
                        @Html.LabelFor(m => m.ZipCode)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"> <i class="fa fa-map-marked-alt"></i> </span>
                            </div>
                            @Html.TextBoxFor(m => m.ZipCode,
                           new
                           {
                               placeholder = "Zip code",
                               @class = "form-control"
                           })
                        </div>
                        @Html.ValidationMessageFor(m => m.ZipCode, "", new { @class = "" })
                    </div> <!-- form-group// -->
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(m => m.Logo)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"> <i class="fa fa-image"></i> </span>
                            </div>
                            <div class="custom-file">
                                @Html.TextBoxFor(m => m.LogoFile,
                           new
                           {
                               placeholder = "Choose logo",
                               @class = "custom-file-input",
                               type = "file",
                               accept = ".jpg,.jpeg,.png,.pdf"
                           })
                                @Html.LabelFor(m => m.LogoFile, Model.Logo,
                           new
                           {
                               @class = "custom-file-label",
                           })
                            </div>
                        </div>
                        @*@Html.ValidationMessageFor(m => m.LogoFile, "", new { @class = "" })*@
                    </div> <!-- form-group// -->
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(m => m.Notes)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"> <i class="fa fa-sticky-note"></i> </span>
                            </div>
                            @Html.TextBoxFor(m => m.Notes,
                           new
                           {
                               placeholder = "Notes",
                               @class = "form-control"
                           })
                        </div>
                    </div> <!-- form-group// -->
                </div>

                if (ViewBag.Edit == false)
                {
                    <center>
                        <div class="form-group">
                            <center>
                                <button type="submit" name="submit" value="Create" class="btn btn-primary btn-block" style="width:250px;"> Create Account </button>
                            </center>
                        </div>
                    </center>
                }
                else
                {
                    <center>
                        <div class="form-group row">
                            <button type="button" data-toggle="modal" data-target="#modal-delete" class="btn btn-danger btn-block col-xs-12 col-sm-12 col-md-4 col-lg-4" style="width:250px;"> Delete Account </button>
                            <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4"></div>
                            <button type="button" data-toggle="modal" data-target="#modal-save" class="btn btn-success btn-block col-xs-12 col-sm-12 col-md-4 col-lg-4" style="width:250px;"> Save Account </button>
                        </div>
                    </center>
                }

                @Html.Partial("_Confirmation")
            }
        </article>
        <!-- /.card-body -->
    </div>
    <!-- /.card -->


    @if (ViewBag.Edit == true)
    {
        <div class="row">
            <div class="col-12 col-sm-12 col-lg-12">
                <div class="card card-primary card-tabs">
                    <div class="card-header p-0 pt-1">
                        <ul class="nav nav-tabs" id="custom-tabs-one-tab" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="Wallet-tab" data-toggle="pill" href="#Wallet_content" role="tab" aria-controls="Wallet_content" aria-selected="false">My Wallet</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="Charge-tab" data-toggle="tab" href="#EntityCharge_content" role="tab" aria-controls="EntityCharge_content" aria-selected="false">My Default Charges</a>
                            </li>
                        </ul>
                    </div>
                    <div class="card-body">
                        <div class="tab-content" id="custom-tabs-one-tabContent">
                            <div class="tab-pane fade show active" id="Wallet_content" role="tabpanel" aria-labelledby="Wallet-tab">
                                @{
                                    Html.RenderPartial("_TransactionHistory", Model.WalletDetail);
                                }
                            </div>
                            <div class="tab-pane fade" id="EntityCharge_content" role="tabpanel" aria-labelledby="Charge-tab">
                                @{
                                    Html.RenderPartial("_EntityChargeList", Model.EntityTransaction);
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</section>
<script type="text/javascript">
    $("#left_nav_dbinc").toggleClass("menu-open");
    $("#insurance").toggleClass("active");
    ///// automatic open navbar after login ///////
    $("#left_nav_dbinc").toggleClass("menu-open");
    $("#left_nav_admin_insurance").toggleClass("menu-open");
    $("#left_nav_dlr").toggleClass("menu-open");
    $("#left_nav_mai").toggleClass("menu-open");
    ///// end automatic open navbar after login ///////
    $(".custom-file-input").on("change", function () {
        var fileName = $(this).val().split("\\").pop();
        if (fileName.length > 0) {
            $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
        }
    });
    //$("#content_header").attr("class", "nav-icon fas fa-hand-holding-heart");

    //CASCADING DROPDOWNLIST
    $('#ProvinceID').on('change', function () {
        $.ajax({
            url: '@Url.Action("GetProvinceCity", "GetData")',
            type: "GET",
            dataType: "JSON",
            cache: false,
            data: { "ProviceCode": this.value },
            success: function (response) {
                $("#CityID").find("option:gt(0)").remove();
                $.each(response, function (index, value) {
                    var o = new Option(value.CityName, value.CityID);
                    $("#CityID").append($(o));
                });
            },
            error: function (xhr, status, error) {
                alert(xhr.responseText);
            }
        });
    });
    $('#CityID').on('change', function () {
        $.ajax({
            url: '@Url.Action("GetCityBarangay", "GetData")',
            type: "GET",
            dataType: "JSON",
            cache: false,
            data: { "CityCode": this.value },
            success: function (response) {
                $("#BarangayID").find("option:gt(0)").remove();
                $.each(response, function (index, value) {
                    var o = new Option(value.BarangayName, value.BarangayID);
                    $("#BarangayID").append($(o));
                });
            },
            error: function (xhr, status, error) {
                alert(xhr.responseText);
            }
        });
    });

</script>
<!-- /.content -->
