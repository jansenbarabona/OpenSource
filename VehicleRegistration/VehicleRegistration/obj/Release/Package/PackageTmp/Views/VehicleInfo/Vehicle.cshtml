@using VehicleRegistration.Models
﻿@using VehicleRegistration.Tools
@model VehicleInfoModel
@{
    ViewBag.Title = "Vehicle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
</style>

<section class="content">
    <div class="card">
        <div class="card-header">
            <div class="card-tools">
                <button type="button" class="btn btn-tool" data-toggle="tooltip" title="Back" onclick="location.href='@Url.Action("Index", "VehicleInfo")'">
                    <i class="far fa-times-circle"></i>
                </button>
            </div>
            <h6><i class="nav-icon far fa-copy"></i> Vehicle Info Registration Form    <small> </small></h6>
        </div>
        <!-- /.card-header -->
        @using (Html.BeginForm("Vehicle", "VehicleInfo", null, FormMethod.Post, new { enctype = "multipart/form-data", id = "vehicle_forms" }))
        {
            ///////////////// stating body article ////////////////
            @Html.AntiForgeryToken()
            <article class="card-body mx-auto">
                @*<div class="progress">
                        <div class="progress-bar" role="progressbar" style="width: 25%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">25%</div>
                    </div>*@
                @*<div class="card card-primary card-outline"></div>*@
                @if (CurrentUser.Details.UserEntityID == (int)UserEntityEnum.MAI && Model.DealerID != null)
                {
                    <ul class="stepper stepper-vertical">
                        <li class="active">
                            <div class="row">
                                <div class="form-group col-lg-4">
                                    @Html.LabelFor(m => m.SelectedDealer)
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"> <i class="fa fa-building"></i> </span>
                                        </div>
                                        @Html.DropDownListFor(m => m.SelectedDealer,
                   new SelectList(Model.DealerList, "DealerID", "DealerName"), "Select Dealer", new { @class = "form-control select2" })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.SelectedDealer, "", new { @class = "" })
                                </div><!-- Accredited Dealer form-group// -->

                                <div class="form-group col-lg-4">
                                    @Html.LabelFor(m => m.SelectedDealerBranch)
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"> <i class="fa fa-building"></i> </span>
                                        </div>
                                        @Html.DropDownListFor(m => m.SelectedDealerBranch,
                   new SelectList(Model.DealerBranchList, "DealerBranchID", "DealerBranchName"), "Select Dealer Branch", new { @class = "form-control select2" })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.SelectedDealerBranch, "", new { @class = "" })
                                </div><!-- Accredited Dealer Branch form-group// -->
                            </div>
                        </li>
                    </ul>
                }
                <ul class="stepper stepper-vertical">
                    <li class="active">
                        <div class="row">
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(m => m.SelectedVehicleMakeID)
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> <i class="fas fa-truck-pickup"></i> </span>
                                    </div>
                                    @if (CurrentUser.Details.UserEntityID == (int)UserEntityEnum.MAI)
                                    {
                                        @Html.DropDownListFor(m => m.SelectedVehicleMakeID,
                   new SelectList(Model.vwMAIVehicleMakeList, "VehicleMakeID", "VehicleMakeName"), "Select Make", new { @class = "form-control select2" })
                                    }
                                    else if (CurrentUser.Details.UserEntityID == (int)UserEntityEnum.Dealer)
                                    {
                                        @Html.DropDownListFor(m => m.SelectedVehicleMakeID,
                   new SelectList(Model.vwDealerVehicleMakeList, "VehicleMakeID", "VehicleMakeName"), "Select Make", new { @class = "form-control select2" })
                                    }
                                </div>
                                @Html.ValidationMessageFor(m => m.SelectedVehicleMakeID, "", new { @class = "" })
                            </div> <!-- Vehicle Make form-group// -->
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(m => m.VehicleModelList)
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> <i class="fas fa-car"></i> </span>
                                    </div>
                                    @Html.DropDownListFor(m => m.SelectedVehicleModelID,
                   new SelectList(Model.VehicleModelList, "VehicleModelID", "VehicleModelName"), "Select Model", new { @class = "form-control select2" })
                                </div>
                                @Html.ValidationMessageFor(m => m.SelectedVehicleModelID, "", new { @class = "" })
                            </div> <!-- Vehicle Model form-group// -->
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(m => m.SelectedVehicleBodyTypeID)
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> <i class="fas fa-car"></i> </span>
                                    </div>
                                    @Html.DropDownListFor(m => m.SelectedVehicleBodyTypeID,
                   new SelectList(Model.VehicleBodyTypeList, "VehicleBodyTypeID", "VehicleBodyTypeName"), "Select Vehicle Body", new { @class = "form-control select2" })
                                </div>
                                @Html.ValidationMessageFor(m => m.SelectedVehicleBodyTypeID, "", new { @class = "" })
                            </div> <!-- Vehicle Body form-group// -->
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(m => m.EngineNumber)
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> <i class="fas fa-hashtag"></i> </span>
                                    </div>
                                    @Html.TextBoxFor(m => m.EngineNumber,
                   new
                   {
                       placeholder = "Engine Number",
                       @class = "form-control"
                   })
                                </div>
                                @Html.ValidationMessageFor(m => m.EngineNumber, "", new { @class = "" })
                            </div> <!-- Engine Number form-group// -->
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(m => m.ChassisNumber)
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> <i class="fas fa-hashtag"></i> </span>
                                    </div>
                                    @Html.TextBoxFor(m => m.ChassisNumber,
                   new
                   {
                       placeholder = "Chassis Number",
                       @class = "form-control"
                   })
                                </div>
                                @Html.ValidationMessageFor(m => m.ChassisNumber, "", new { @class = "" })
                            </div> <!-- Chassis Number form-group// -->
                            @if (CurrentUser.Details.UserEntityID != (int)UserEntityEnum.Dealer)
                            {
                                <div class="form-group col-lg-4">
                                    @Html.LabelFor(m => m.BodyIDNumber)
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"> <i class="fas fa-barcode"></i> </span>
                                        </div>
                                        @Html.TextBoxFor(m => m.BodyIDNumber,
                       new
                       {
                           placeholder = "Body ID Number",
                           @class = "form-control"
                       })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.BodyIDNumber, "", new { @class = "" })
                                </div> <!-- Body ID Number form-group// -->
                            }
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(m => m.SelectedVehicleColorID)
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> <i class="fas fa-palette"></i> </span>
                                    </div>
                                    @Html.DropDownListFor(m => m.SelectedVehicleColorID,
                   new SelectList(Model.VehicleColorList, "VehicleColorID", "VehicleColorName"), "Select Color", new { @class = "form-control select2" })
                                </div>
                                @Html.ValidationMessageFor(m => m.SelectedVehicleColorID, "", new { @class = "" })
                            </div> <!-- Vehicle Color form-group// -->
                            @if (CurrentUser.Details.UserEntityID != (int)UserEntityEnum.Dealer)
                            {
                                <div class="form-group col-lg-4">
                                    @Html.LabelFor(m => m.AirconType)
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"> <i class="fas fa-snowflake"></i> </span>
                                        </div>
                                        @Html.DropDownListFor(m => m.AirconType,
                                       new SelectList(Model.VehicleAirconTypeList, "AirconTypeReference", "AirconTypeDescription"), "Select Aircon Type", new { @class = "form-control select2" })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.AirconType, "", new { @class = "" })
                                </div> <!-- Aircon Type form-group// -->
                                <div class="form-group col-lg-4">
                                    @Html.LabelFor(m => m.SelectedVehicleFuelTypeID)
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"> <i class="fa fa-gas-pump"></i> </span>
                                        </div>
                                        @Html.DropDownListFor(m => m.SelectedVehicleFuelTypeID,
                       new SelectList(Model.VehicleFuelTypeList, "VehicleFuelTypeID", "VehicleFuelTypeName"), "Select Fuel", new { @class = "form-control select2" })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.SelectedVehicleFuelTypeID, "", new { @class = "" })
                                </div> <!-- Fuel Type form-group// -->
                                <div class="form-group col-lg-4">
                                    @Html.LabelFor(m => m.ConductionSticker)
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"> <i class="fas fa-sticky-note"></i> </span>
                                        </div>
                                        @Html.TextBoxFor(m => m.ConductionSticker,
                       new
                       {
                           placeholder = "Conduction Sticker",
                           @class = "form-control"
                       })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.ConductionSticker, "", new { @class = "" })
                                </div> <!-- Conduction Sticker form-group// -->
                                <div class="form-group col-lg-4">
                                    @Html.LabelFor(m => m.PistonDisplacement)
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"> <i class="far fa-dot-circle"></i> </span>
                                        </div>
                                        @Html.TextBoxFor(m => m.PistonDisplacement,
                       new
                       {
                           placeholder = "Piston Displacement",
                           @class = "form-control"
                       })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.PistonDisplacement, "", new { @class = "" })
                                </div> <!-- Piston Disposition form-group// -->
                                <div class="form-group col-lg-4">
                                    @Html.LabelFor(m => m.Cylinders)
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"> <i class="far fa-circle"></i> </span>
                                        </div>
                                        @Html.TextBoxFor(m => m.Cylinders,
                       new
                       {
                           placeholder = "Cylinders",
                           @class = "form-control"
                       })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.Cylinders, "", new { @class = "" })
                                </div> <!-- Cylinders form-group// -->
                                <div class="form-group col-lg-4">
                                    @Html.LabelFor(m => m.Year)
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"> <i class="fas fa-truck-pickup"></i> </span>
                                        </div>
                                        @Html.TextBoxFor(m => m.Year,
                       new
                       {
                           placeholder = "Year",
                           @class = "form-control"
                       })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.Year, "", new { @class = "" })
                                </div> <!-- Year form-group// -->
                            }
                            <div class="form-group col-lg-4">
                                @Html.LabelFor(m => m.GrossVehicleWeight)
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> <i class="fas fa-weight-hanging"></i> </span>
                                    </div>
                                    @Html.TextBoxFor(m => m.GrossVehicleWeight,
                   new
                   {
                       placeholder = "Gross Vehicle Weight",
                       @class = "form-control"
                   })
                                </div>
                                @Html.ValidationMessageFor(m => m.GrossVehicleWeight, "", new { @class = "" })
                            </div> <!-- Gross Vehicle Weight form-group// -->

                            @if (CurrentUser.Details.UserEntityID != (int)UserEntityEnum.Dealer)
                            {
                                <div class="form-group col-lg-4">
                                    @Html.LabelFor(m => m.FrontTiresNumber)
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"> <i class="fas fa-truck-pickup"></i> </span>
                                        </div>
                                        @Html.TextBoxFor(m => m.FrontTiresNumber,
                       new
                       {
                           placeholder = "No. of Front Tires",
                           @class = "form-control"
                       })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.FrontTiresNumber, "", new { @class = "" })
                                </div> <!-- Number of Front Tires form-group// -->
                            }
                        </div>
                    </li>
                </ul>
                @if (CurrentUser.Details.UserEntityID != (int)UserEntityEnum.Dealer)
                {
                    <ul class="stepper stepper-vertical">
                        <li class="active">
                            <div class="row">
                                <div class="form-group col-lg-4">
                                    @Html.LabelFor(m => m.RearTiresNumber)
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"> <i class="fas fa-truck-pickup"></i> </span>
                                        </div>
                                        @Html.TextBoxFor(m => m.RearTiresNumber,
                       new
                       {
                           placeholder = "No. of Rear Tires",
                           @class = "form-control"
                       })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.RearTiresNumber, "", new { @class = "" })
                                </div> <!-- Number of Rear Tires form-group// -->


                                <div class="form-group col-lg-4">
                                    @Html.LabelFor(m => m.COCNo)
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"> <i class="fab fa-slack-hash"></i> </span>
                                        </div>
                                        @Html.TextBoxFor(m => m.COCNo,
                       new
                       {
                           placeholder = "COC Number",
                           @class = "form-control"
                       })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.COCNo, "", new { @class = "" })
                                </div> <!-- COC Number form-group// -->
                            </div>
                        </li>
                    </ul>
                }
                @if (ViewBag.Edit == false)
                {
                    <center>
                        <div class="form-group">
                            <center>
                                <button type="submit" name="submit" value="Create" id="create" class="btn btn-primary btn-block" style="width:250px;"> Create </button>
                            </center>
                        </div>
                    </center>
                }
                else
                {
                    <center>
                        <div class="form-group row">
                            <button type="button" data-toggle="modal" data-target="#modal-delete" class="btn btn-danger btn-block col-xs-12 col-sm-12 col-md-4 col-lg-4" style="width:250px;"> Delete </button>
                            <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4"></div>
                            <button type="button" data-toggle="modal" data-target="#modal-save" class="btn btn-success btn-block col-xs-12 col-sm-12 col-md-4 col-lg-4" style="width:250px;"> Save </button>
                        </div>
                    </center>
                }
                @*@Html.Partial("_Confirmation")*@
                <a id="back-to-top" href="#" class="btn btn-primary btn-lg back-to-top" role="button" title="Back to top" data-toggle="tooltip" data-placement="left">
                    <i class="fas fa-chevron-circle-up"></i>
                </a>
            </article>
            @Html.Partial("_Confirmation")
            <!-- /.card-body -->
        }
    </div>
    <!-- /.card -->
</section>
<style>
    span.label {
        font-weight: 700;
        font-family: Arial, Helvetica, sans-serif;
        color: #0078FF;
    }

    span.circle {
        height: 25px;
        width: 25px;
        color: white;
        border-radius: 50%;
        display: inline-block;
        background: -webkit-linear-gradient(left,#44C0F5,#3E91D7);
        padding-left: 9px;
    }

    ul {
        list-style-type: none;
    }
</style>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script>
    @if (CurrentUser.Details.UserEntityID == (int)UserEntityEnum.Dealer)
    {
        <text>
    $("#SelectedVehicleColorID").attr('data-val', false);
    $("#GrossVehicleWeight").attr('data-val', false);
        </text>
    }
    $('#SelectedDealer').on('change', function () {
        $.ajax({
            url: '@Url.Action("GetDealerBranch", "GetData")',
            type: "GET",
            dataType: "JSON",
            cache: false,
            data: { "DealerID": this.value },
            success: function (response) {
                $("#SelectedDealerBranch").find("option:gt(0)").remove();
                $.each(response, function (index, value) {
                    var o = new Option(value.DealerBranchName, value.DealerBranchID);
                    $("#SelectedDealerBranch").append($(o));
                });
            },
            error: function (xhr, status, error) {
                alert(xhr.responseText);
            }
        });
    });
    $('#SelectedVehicleMakeID').on('change', function () {
        $.ajax({
            url: '@Url.Action("GetVehicleModel", "GetData")',
            type: "GET",
            dataType: "JSON",
            cache: false,
            data: { "VehicleMakeID": this.value },
            success: function (response) {
                $("#SelectedVehicleModelID").find("option:gt(0)").remove();
                $.each(response, function (index, value) {
                    var o = new Option(value.VehicleModelName + " - " + value.Variant, value.VehicleModelID);
                    $("#SelectedVehicleModelID").append($(o));
                });
            },
            error: function (xhr, status, error) {
                alert(xhr.responseText);
            }
        });
    });


    $("form").on("submit", function () {
        @if (CurrentUser.Details.UserEntityID == (int)UserEntityEnum.MAI)
        {
            <text>
                $("#SelectedVehicleMakeID").rules('add', { required: true, messages: { required: "The Vehicle Make field is required." } });
                $("#SelectedVehicleMakeID").rules('add', { required: true, messages: { required: "The Vehicle Make field is required." } });
                $("#SelectedVehicleModelID").rules('add', { required: true, messages: { required: "The Vehicle Model field is required." } });
                $("#SelectedVehicleBodyTypeID").rules('add', { required: true, messages: { required: "The Vehicle Body Type field is required." } });
                $("#SelectedVehicleColorID").rules('add', { required: true, messages: { required: "The Vehicle Color field is required." } });
                $("#SelectedVehicleFuelTypeID").rules('add', { required: true, messages: { required: "The Vehicle Fuel Type field is required." } });
            </text>
        }
    });
</script>
