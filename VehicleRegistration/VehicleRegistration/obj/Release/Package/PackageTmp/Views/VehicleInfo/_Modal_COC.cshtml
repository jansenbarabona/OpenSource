@using VehicleRegistration.Models
﻿@using VehicleRegistration.Tools
@model COCModel

<style>

    div#ui-datepicker-div.ui-datepicker.ui-widget.ui-widget-content.ui-helper-clearfix.ui-corner-all {
        z-index: 2051 !important;
    }
</style>

<div class="modal fade" id="modal-COC">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title"><label id="lblModalTitle">Are you sure you want to get COC?</label></h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group col-12">
                        @Html.LabelFor(m => m.DealerInsuranceID)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-id-card"></i> </span>
                            </div>
                            @Html.DropDownListFor(m => m.DealerInsuranceID, new SelectList(Model.DealerInsuranceList, "InsuranceID", "InsuranceName", new { @dataAutoGenerated = "AutoGenerateCOC" }), "Select Entity Type", new { @class = "form-control select2" })
                        </div>
                        @Html.ValidationMessageFor(m => m.DealerInsuranceID, "", new { @class = "" })
                    </div>

                </div>
                <div class="row switchAutoGenerated" data-autogenerated="true">
                    <div class="form-group col-lg-12">
                        <div class="input-group" style="align-content:center; justify-items:center;">
                            <div class="icheck-success d-inline">
                                @Html.CheckBoxFor(o => o.AutoGenerateCoC)
                                @Html.LabelFor(o => o.AutoGenerateCoC)
                            </div>
                        </div>
                    </div>  <!--COC-->
                </div>
                <div>
                    <div class="row switchAuto" data-autogenerated="true">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(m => m.VehicleTypeID)
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"> <i class="fas fa-car"></i> </span>
                                </div>
                                @Html.DropDownListFor(m => m.VehicleTypeID, new SelectList(Model.VehicleTypeList, "VehicleTypeID", "VehicleName"), "Select vehicle type", new { @class = "form-control select2" })
                            </div>
                            @Html.ValidationMessageFor(m => m.VehicleTypeID, "", new { @class = "" })
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(m => m.VehicleClassificationID)
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"> <i class="fas fa-car"></i> </span>
                                </div>
                                @Html.DropDownListFor(m => m.VehicleClassificationID, new SelectList(Model.VehicleClassificationList, "VehicleClassificationID", "VehicleClassificationName"), "Select vehicle type", new { @class = "form-control select2" })
                            </div>
                            @Html.ValidationMessageFor(m => m.VehicleClassificationID, "", new { @class = "" })
                        </div>  <!--Vehicle Type-->
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(m => m.TaxTypeID)
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"> <i class="fas fa-car"></i> </span>
                                </div>
                                @Html.DropDownListFor(m => m.TaxTypeID, new SelectList(Model.TaxTypeList, "CTPLTaxTypeID", "CTPLTaxType1"), "Select vehicle type", new { @class = "form-control select2" })
                            </div>
                            @Html.ValidationMessageFor(m => m.TaxTypeID, "", new { @class = "" })
                        </div>  <!--Vehicle Type-->
                    </div>
                    <div class="row switchManual" data-autogenerated="false">
                        <div class="form-group col-6">
                            @Html.LabelFor(m => m.COCInsuredName)
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-id-card"></i> </span>
                                </div>
                                @Html.TextBoxFor(m => m.COCInsuredName, new { placeholder = "Insured Name", @class = "form-control", type = "text" })
                            </div>
                            @Html.ValidationMessageFor(m => m.COCInsuredName, "", new { @class = "" })
                        </div>
                        <div class="form-group col-6">
                            @Html.LabelFor(m => m.COCInsuredAddress)
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-home"></i> </span>
                                </div>
                                @Html.TextBoxFor(m => m.COCInsuredAddress, new { placeholder = "Insured Address", @class = "form-control", type = "text" })
                            </div>
                            @Html.ValidationMessageFor(m => m.COCInsuredAddress, "", new { @class = "" })
                        </div>
                    </div>
                    <div class="row switchManual switchAutoManual" data-autogenerated="false">
                        <div class="form-group col-6">
                            @Html.LabelFor(m => m.COC)
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-id-card"></i> </span>
                                </div>
                                @Html.TextBoxFor(m => m.COC, new { placeholder = "CoC Number", @class = "form-control", type = "text" })
                            </div>
                            @Html.ValidationMessageFor(o => o.COC, "", new { @class = "" })
                        </div>
                        <div class="form-group col-6">
                            @Html.LabelFor(m => m.COCAuthenticationCode)
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-id-card"></i> </span>
                                </div>
                                @Html.TextBoxFor(m => m.COCAuthenticationCode, new { placeholder = "CoC Authentication Code", @class = "form-control", type = "text" })
                            </div>
                            @Html.ValidationMessageFor(m => m.COCAuthenticationCode, "", new { @class = "" })
                        </div>

                        <div class="form-group col-lg-6">
                            @Html.LabelFor(m => m.InceptionDate)
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"> <i class="fas fa-barcode"></i> </span>
                                </div>
                                @Html.EditorFor(m => m.InceptionDate, new { htmlAttributes = new { @class = "form-control", placeholder = "Inception Date", @type = "date" } })
                            </div>
                            @Html.ValidationMessageFor(m => m.InceptionDate, "", new { @class = "" })
                        </div> <!-- Report Date form-group// -->
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(m => m.ExpiryDate)
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"> <i class="fas fa-barcode"></i> </span>
                                </div>
                                @Html.EditorFor(m => m.ExpiryDate, new { htmlAttributes = new { @class = "form-control", placeholder = "Expiry Date", @type = "date" } })
                            </div>
                            @Html.ValidationMessageFor(m => m.ExpiryDate, "", new { @class = "" })
                        </div> <!-- Report Date form-group// -->

                        <div class="form-group col-lg-6">
                            @Html.LabelFor(m => m.COCFile)
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-image"></i></span>
                                </div>
                                <div class="custom-file">
                                    @Html.TextBoxFor(m => m.COCFile,
                                   new
                                   {
                                       placeholder = "COC File",
                                       @class = "custom-file-input",
                                       type = "file",
                                       accept = ".jpg,.jpeg,.png,.pdf"
                                   })
                                    @Html.LabelFor(m => m.COCFile, "Choose file",
                                   new
                                   {
                                       @class = "custom-file-label",
                                   })
                                </div>
                            </div>
                            @Html.ValidationMessageFor(m => m.COCFile, "", new { @class = "" })
                        </div> <!--COC File form-group// -->
                    </div>
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" id="btn_coc" class="btn btn-primary">Yes</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="modal-COC-Confirmation" class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Are you sure you want to save?</h4>
            </div>
            <div id="modal-body-coc-confirmation" class="modal-body">
                <div class="switchAutoGenerated" data-autogenerated="true">
                    <div class="form-group col-12" style="text-align:center;">
                        @Html.LabelFor(m => m.DealerInsuranceID): <label id="lbl_insurance2"></label>
                    </div>
                </div>
                <div class="row switchAuto" data-autogenerated="true">
                    <div class="form-group col-6">
                        @Html.LabelFor(m => m.VehicleTypeID): <label id="lbl_vehicletype"></label>
                    </div>
                    <div class="form-group col-6">
                        @Html.LabelFor(m => m.VehicleClassificationID): <label id="lbl_classification"></label>
                    </div>
                    <div class="form-group col-6">
                        @Html.LabelFor(m => m.TaxTypeID): <label id="lbl_taxtype"></label>
                    </div>
                </div>
                <div>
                    <div class="row switchManual" data-autogenerated="false">
                        <div class="form-group col-12" style="text-align:center;">
                            @Html.LabelFor(m => m.DealerInsuranceID): <label id="lbl_insurance"></label>
                        </div>
                        <div class="form-group col-6">
                            @Html.LabelFor(m => m.COCInsuredName): <label id="lbl_InsuredName"></label>
                        </div>
                        <div class="form-group col-6">
                            @Html.LabelFor(m => m.COCInsuredAddress): <label id="lbl_InsuredAddress"></label>
                        </div>
                    </div>
                    <div class="row switchManual switchAutoManual" data-autogenerated="false">
                        <div class="form-group col-6">
                            @Html.LabelFor(m => m.COC): <label id="lbl_COC"></label>
                        </div>
                        <div class="form-group col-6">
                            @Html.LabelFor(m => m.COCAuthenticationCode): <label id="lbl_COCAuthenticationCode"></label>
                        </div>
                        <div class="form-group col-6">
                            @Html.LabelFor(m => m.InceptionDate): <label id="lbl_Inception"></label>
                        </div>
                        <div class="form-group col-6">
                            @Html.LabelFor(m => m.ExpiryDate): <label id="lbl_Expiry"></label>
                        </div>
                        <div class="form-group col-6">
                            @Html.LabelFor(m => m.COCFile): <label id="lbl_COCFile"></label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" id="btn_coc_confirmation_close" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="submit" name="submit" value="COC" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>

<script>


    $('#btn_coc').click(function (e) {

        if (jQuery("#coctest").valid()) {
            $("#lbl_insurance").text($("#COCInfo_DealerInsuranceID option:selected").text());
            $("#lbl_insurance2").text($("#COCInfo_DealerInsuranceID option:selected").text());
            $("#lbl_vehicletype").text($("#COCInfo_VehicleTypeID option:selected").text());
            $("#lbl_classification").text($("#COCInfo_VehicleClassificationID option:selected").text());
            $("#lbl_taxtype").text($("#COCInfo_TaxTypeID option:selected").text());
            $("#lbl_InsuredName").text($("#COCInfo_COCInsuredName").val());
            $("#lbl_InsuredAddress").text($("#COCInfo_COCInsuredAddress").val());
            $("#lbl_COC").text($("#COCInfo_COC").val());
            $("#lbl_COCAuthenticationCode").text($("#COCInfo_COCAuthenticationCode").val());
            $("#lbl_Inception").text($("#COCInfo_InceptionDate").val());
            $("#lbl_Expiry").text($("#COCInfo_ExpiryDate").val());
            $("#lbl_COCFile").text($("#COCInfo_COCFile").val().replace(/C:\\fakepath\\/i, ''));

            $("#modal-COC").modal("hide");
            $("#modal-COC-Confirmation").modal("show");
        }

        //if ($("#vehiclelist_tbody tr").length == 0) {
        //    if (jQuery("form").valid()) {
        //        $("#modal-COC").modal("hide");
        //        $("#modal-COC-Confirmation").modal("show");
        //    }
        //}
        //else if ($("#vehiclelist_tbody tr").length > 0) {
        //    if (jQuery("form").valid()) {
        //        $("#modal-COC").modal("hide");
        //        jQuery.noConflict();
        //        if (jQuery.fn.DataTable.isDataTable('#tbl_listofsummary')) {
        //            jQuery('#tbl_listofsummary').DataTable().clear();
        //            jQuery('#tbl_listofsummary').DataTable().destroy();
        //        }

        //        if ($("#summarry_thead tr").length == 0) {
        //            $("#modal-body-coc-confirmation").append("" +
        //            "<table id='tbl_listofsummary' class='table table-bordered table-striped table-hover' style='width:100%; max-width:100%;'>" +
        //            "   <thead id='summarry_thead'>" +
        //            "       <tr>" +
        //            "           <th style='width:25%'>Make</th>" +
        //            "           <th style='width:25%'>Model</th>" +
        //            "           <th style='width:25%'>Engine</th>" +
        //            "           <th style='width:25%'>Body</th>" +
        //            "       </tr>" +
        //            "   </thead>" +
        //            "   <tbody id='summarry_tbody'>" +
        //            "   </tbody>" +
        //            "</table>");
        //        }

        //        $("#vehiclelist_tbody .checkbox_all:checkbox:checked").each(function () {
        //            var tr = $(this).closest("tr");
        //            var make = tr.find("td:eq(1)").text().trim();
        //            var model = tr.find("td:eq(2)").text().trim();
        //            var engine = tr.find("td:eq(5)").text().trim();
        //            var body = tr.find("td:eq(6)").text().trim();
        //            $("#tbl_listofsummary #summarry_tbody").append("" +
        //            "<tr>" +
        //            "    <td>" + make + "</td>" +
        //            "    <td>" + model + "</td>" +
        //            "    <td>" + engine + "</td>" +
        //            "    <td>" + body + "</td>" +
        //            "</tr>");
        //        });

        //        jQuery.noConflict();
        //        var summary_tbl = jQuery("#tbl_listofsummary").DataTable({
        //            "scrollX": true,
        //            "scrollY": true,
        //            "info": false,
        //            "lengthChange": false,
        //            "searching": false,
        //            "paging": false,
        //            "order": [],
        //            "dom":
        //                "<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>" +
        //                "<'row'<'col-sm-12'tr>>" +
        //                "<'row'<'col-sm-12 col-md-5'p><'col-sm-12 col-md-7'i>>",
        //        });

        //        $(document).on('shown.bs.modal', '.modal', function (e) {
        //            summary_tbl.columns.adjust();
        //        });
        //        $("#modal-COC-Confirmation").modal("show");
        //    }
        //}
    });

    $('#btn_coc_confirmation_close').click(function () {
        $("#modal-COC").modal("show");
    })

    //$("#COCInfo_DealerInsuranceID").on("change", function () {
    //    $("#coc_manual").show();
    //});

    $(".switchAutoGenerated").hide();
    $(".switchAuto").hide();
    $(".switchManual").hide();

    $('#COCInfo_DealerInsuranceID').on("change", function (data) {
        $.ajax({
            url: '@Url.Action("GetInsuranceAutoGenerated", "GetData")',
            type: "GET",
            dataType: "JSON",
            cache: false,
            data: { "InsuranceID": this.value },
            success: function (result) {
                switchUi(result);
            },
            error: function (xhr, status, error) {
                alert(xhr.responseText);
            }
        });
    });
    $("#COCInfo_AutoGenerateCoC").on("change", function () {
        if ($(this).is(":checked")) {
            $('.switchAutoManual').filter('[data-autogenerated="false"]').hide();
            $('.switchAuto').filter('[data-autogenerated="true"]').show();
        }
        else {
            $('.switchAutoManual').filter('[data-autogenerated="false"]').show();
            $('.switchAuto').filter('[data-autogenerated="true"]').hide();
        }

    });
    function switchUi(selection) {
        $('.switchAutoGenerated').filter('[data-autogenerated="' + selection + '"]').show();
        $('.switchAutoGenerated').not('[data-autogenerated="' + selection + '"]').hide();
        $('.switchManual').filter('[data-autogenerated="' + selection + '"]').show();
        $('.switchManual').not('[data-autogenerated="' + selection + '"]').hide();
        $('.switchAuto').filter('[data-autogenerated="' + selection + '"]').show();
        $('.switchAuto').not('[data-autogenerated="' + selection + '"]').hide();

        if (!$("#COCInfo_AutoGenerateCoC").is(":checked")) {
            $('.switchAutoManual').filter('[data-autogenerated="false"]').show();
            $('.switchAuto').filter('[data-autogenerated="true"]').hide();
        }
    }

    $("#COCInfo_VehicleTypeID").on("change", function () {
        $.ajax({
            url: '@Url.Action("GetPremiumType", "GetData")',
            type: "GET",
            dataType: "JSON",
            cache: false,
            data: { "VehicleTypeID": this.value },
            success: function (response) {
                $("#COCInfo_VehicleClassificationID").find("option:gt(0)").remove();
                $.each(response, function (index, value) {
                    var o = new Option(value.VehicleClassificationName, value.VehicleClassificationID);
                    $("#COCInfo_VehicleClassificationID").append($(o));
                });
            },
            error: function (xhr, status, error) {
                alert(xhr.responseText);
            }
        });
    });
</script>
