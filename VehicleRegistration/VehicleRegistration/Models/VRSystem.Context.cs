//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VehicleRegistration.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class VRSystemEntities : DbContext
    {
        public VRSystemEntities()
            : base("name=VRSystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<City> City { get; set; }
        public virtual DbSet<CivilStatus> CivilStatus { get; set; }
        public virtual DbSet<CTPL> CTPL { get; set; }
        public virtual DbSet<CTPLTerm> CTPLTerm { get; set; }
        public virtual DbSet<Customer> Customer { get; set; }
        public virtual DbSet<Dealer> Dealer { get; set; }
        public virtual DbSet<DealerBranch> DealerBranch { get; set; }
        public virtual DbSet<DealerInsurance> DealerInsurance { get; set; }
        public virtual DbSet<DealerVehicleMake> DealerVehicleMake { get; set; }
        public virtual DbSet<Insurance> Insurance { get; set; }
        public virtual DbSet<InsuranceBranch> InsuranceBranch { get; set; }
        public virtual DbSet<InsuranceCOCSeries> InsuranceCOCSeries { get; set; }
        public virtual DbSet<MAI> MAI { get; set; }
        public virtual DbSet<MAIDealer> MAIDealer { get; set; }
        public virtual DbSet<MAIType> MAIType { get; set; }
        public virtual DbSet<MAIVehicleMake> MAIVehicleMake { get; set; }
        public virtual DbSet<Province> Province { get; set; }
        public virtual DbSet<Region> Region { get; set; }
        public virtual DbSet<Sex> Sex { get; set; }
        public virtual DbSet<Title> Title { get; set; }
        public virtual DbSet<TitleType> TitleType { get; set; }
        public virtual DbSet<Transaction> Transaction { get; set; }
        public virtual DbSet<TransactionEntity> TransactionEntity { get; set; }
        public virtual DbSet<TransactionEntityType> TransactionEntityType { get; set; }
        public virtual DbSet<TransactionEntryType> TransactionEntryType { get; set; }
        public virtual DbSet<TransactionType> TransactionType { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<UserEntity> UserEntity { get; set; }
        public virtual DbSet<UserRole> UserRole { get; set; }
        public virtual DbSet<VehicleBodyType> VehicleBodyType { get; set; }
        public virtual DbSet<VehicleClassification> VehicleClassification { get; set; }
        public virtual DbSet<VehicleColor> VehicleColor { get; set; }
        public virtual DbSet<VehicleFuelType> VehicleFuelType { get; set; }
        public virtual DbSet<VehicleInfo> VehicleInfo { get; set; }
        public virtual DbSet<VehicleMake> VehicleMake { get; set; }
        public virtual DbSet<VehicleModel> VehicleModel { get; set; }
        public virtual DbSet<Wallet> Wallet { get; set; }
        public virtual DbSet<vwDealerBranchList> vwDealerBranchList { get; set; }
        public virtual DbSet<vwDealerInvoice> vwDealerInvoice { get; set; }
        public virtual DbSet<vwDealerList> vwDealerList { get; set; }
        public virtual DbSet<vwDealerVehicleMake> vwDealerVehicleMake { get; set; }
        public virtual DbSet<vwMAIList> vwMAIList { get; set; }
        public virtual DbSet<vwMAIVehicleMake> vwMAIVehicleMake { get; set; }
        public virtual DbSet<vwProvinceCity> vwProvinceCity { get; set; }
        public virtual DbSet<vwTransactionEntityList> vwTransactionEntityList { get; set; }
        public virtual DbSet<vwTransactionEntityType> vwTransactionEntityType { get; set; }
        public virtual DbSet<vwTransactionTypeList> vwTransactionTypeList { get; set; }
        public virtual DbSet<vwUserList> vwUserList { get; set; }
        public virtual DbSet<vwVehicleModel> vwVehicleModel { get; set; }
        public virtual DbSet<BatchDetails> BatchDetails { get; set; }
        public virtual DbSet<BatchType> BatchType { get; set; }
        public virtual DbSet<BatchMaster> BatchMaster { get; set; }
        public virtual DbSet<VehicleType> VehicleType { get; set; }
        public virtual DbSet<Barangay> Barangay { get; set; }
        public virtual DbSet<MVPremium> MVPremium { get; set; }
        public virtual DbSet<CTPLTaxType> CTPLTaxType { get; set; }
        public virtual DbSet<vwDivisionsList> vwDivisionsList { get; set; }
        public virtual DbSet<vwCustomerList> vwCustomerList { get; set; }
        public virtual DbSet<LTO> LTO { get; set; }
        public virtual DbSet<LTOBranch> LTOBranch { get; set; }
        public virtual DbSet<vwLTOList> vwLTOList { get; set; }
        public virtual DbSet<AirconType> AirconType { get; set; }
        public virtual DbSet<AuditLogin> AuditLogin { get; set; }
        public virtual DbSet<DealerInvoice> DealerInvoice { get; set; }
        public virtual DbSet<LTOUserType> LTOUserType { get; set; }
        public virtual DbSet<TransactionEntityBranch> TransactionEntityBranch { get; set; }
        public virtual DbSet<vwTransactionEntityBranchList> vwTransactionEntityBranchList { get; set; }
        public virtual DbSet<vwVehicleList> vwVehicleList { get; set; }
    
        public virtual ObjectResult<spEntityWallet_Result> spEntityWallet(Nullable<int> userEntityID, Nullable<int> entityID)
        {
            var userEntityIDParameter = userEntityID.HasValue ?
                new ObjectParameter("UserEntityID", userEntityID) :
                new ObjectParameter("UserEntityID", typeof(int));
    
            var entityIDParameter = entityID.HasValue ?
                new ObjectParameter("EntityID", entityID) :
                new ObjectParameter("EntityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEntityWallet_Result>("spEntityWallet", userEntityIDParameter, entityIDParameter);
        }
    
        public virtual ObjectResult<spInsuranceDealer_Result> spInsuranceDealer(Nullable<int> insuranceID)
        {
            var insuranceIDParameter = insuranceID.HasValue ?
                new ObjectParameter("InsuranceID", insuranceID) :
                new ObjectParameter("InsuranceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInsuranceDealer_Result>("spInsuranceDealer", insuranceIDParameter);
        }
    }
}
